buildscript {
    repositories {
        maven {
            name = "MinecraftForge"
            url = 'https://files.minecraftforge.net/maven'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

apply plugin: 'java'
apply plugin: 'idea'

idea {
    module {
        // for those who provide sources and javadocs, this is great
        downloadJavadoc = downloadSources = true
    }
}

repositories {
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
}

def modid = 'natura_niceties'
def creator = 'degeneratehuman'

project.setVersion '1.0'
project.setGroup "com.${creator}.${modid}"
project.setArchivesBaseName "${modid}"

def minecraft_ver = "${mc_ver}-${forge_ver}"

def placeholderFileGlobs = [
        '**/*.info',
        "assets/${modid}/**/*.json"
]

def placeholders = [
        'version'   : project.getVersion(),
        'mc_ver'    : mc_ver,
        'modid'     : modid
]

def jvm_ver = '1.8'
sourceCompatibility = targetCompatibility = jvm_ver

compileJava {
    sourceCompatibility = targetCompatibility = jvm_ver
}

dependencies {
    compile "com.progwml6.natura:natura:${mc_ver}-${natura_ver}"
    compile "slimeknights.mantle:Mantle:${mc_ver_short}-${mantle_ver}"

    // utility for when manually testing stuff
    // runtime "mezz.jei:jei_${mc_ver}:${jei_ver}"
}

task generateJava(type:Copy) {
    from 'src/template/java'
    into "$buildDir/generated/java"
    expand placeholders
}

// append the 'generated' folder to the list of source dirs
sourceSets.main.java.srcDir "$buildDir/generated/java"
compileJava.dependsOn generateJava

minecraft {
    setVersion minecraft_ver
    setMappings mappings_ver
    runDir = "run"
    replace '${version}', project.version
    useDepAts = true
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        for (glob in placeholderFileGlobs) {
            include glob
        }
        // replace version and MCVersion
        expand placeholders
    }

    from(sourceSets.main.resources.srcDirs) {
        for (glob in placeholderFileGlobs) {
            exclude glob
        }
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title"       : modid,
            "Specification-Vendor"      : creator,
            "Specification-Version"     : "1",
            "Implementation-Title"      : project.name,
            "Implementation-Version"    : project.version,
            "Implementation-Vendor"     : creator,
            "Implementation-Timestamp"  : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ") // ISO FORMAT!!! WOOP!!!
        ])
    }

    finalizedBy('reobfJar')
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}
